

services:
  db:
    image: postgres:17
    env_file: 
      - ./Backend/.env
    

    # volumes:
    #   - postgres_data:/var/lib/postgresql/data
    networks:
      - backend-network
    expose:
      - 5432
    #restart: always

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 3s
      retries: 5

  web:
    image: leonidlivshitz/course-project-consortium-backend
    env_file: 
      - './Backend/.env'
    ports:
      - "5000:80"
    depends_on: 
      - db
    #restart: always
        #condition: service_healthy
    networks:
      - backend-network



  # frontend:
  #   build: ./my-app
  #   ports:
  #     - "80:80"
  #   depends_on:
  #     - web
  #   networks:
  #     - backend-network

volumes:
  postgres_data:

networks:
  backend-network:
    driver: bridge


# version: '3.8'
# services:
#   db:
#     image: postgres:13
#     environment:
#       POSTGRES_USER: cardio_user
#       POSTGRES_PASSWORD: CardioGenHSE
#       POSTGRES_DB: cardiogenetics_db
#     volumes:
#       - postgres_data:/var/lib/postgresql/data
#     networks:
#       - backend-network
#     ports:
#       - "5432:5432"
#     healthcheck:
#       test: ["CMD-SHELL", "pg_isready -U cardio_user -d cardiogenetics_db"]
#       interval: 5s
#       timeout: 3s
#       retries: 5
#   web:
#     build: ./Backend
#     env_file: ./Backend/app/.env
#     ports:
#       - "5000:5000"
#     depends_on:
#       db:
#         condition: service_healthy
#     networks:
#       - backend-network
#   admin:
#     build: ./Backend
#     env_file: ./Backend/app/.env
#     ports:
#       - "8000:5000"  # Админка будет доступна на порту 8000
#     depends_on:
#       db:
#         condition: service_healthy
#     networks:
#       - backend-network
#     command: ["python", "run.py"]
#   frontend:
#     build: ./my-app
#     ports:
#       - "3000:3000"
#     depends_on:
#       - web
#     networks:
#       - backend-network
# volumes:
#   postgres_data:
# networks:
#   backend-network:
#     driver: bridge